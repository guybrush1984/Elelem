name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0

permissions:
  contents: read
  packages: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: uv sync

    - name: Run config validation tests
      run: |
        echo "üîß Running configuration validation tests..."
        uv run pytest tests/test_config_validation.py -v

    - name: Run faker tests
      run: |
        echo "üé≠ Running faker tests (no real API calls)..."
        uv run pytest tests/test_elelem_with_faker.py -v

  build-python:
    name: Build Python Package
    needs: test  # Only run if tests pass
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important for setuptools-scm

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build setuptools-scm

      - name: Build package
        run: python -m build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-packages
          path: dist/*

  build-docker:
    name: Build and Push Docker Image
    needs: test  # Only run if tests pass
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=tag
          type=raw,value=latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: src/elelem/server/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64

    - name: Print image details
      run: |
        echo "üê≥ Docker image built and pushed successfully!"
        echo "üì¶ Image: ghcr.io/${{ github.repository }}:${{ github.ref_name }}"
        echo "üè∑Ô∏è  All tags: ${{ steps.meta.outputs.tags }}"

  release:
    name: Create GitHub Release
    needs: [test, build-python, build-docker]  # Wait for all builds to complete
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-packages
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          generate_release_notes: true
          body: |
            ## üöÄ Release ${{ github.ref_name }}

            ### What's included:
            - üì¶ **Python package**: Available in release assets
            - üê≥ **Docker image**: `ghcr.io/${{ github.repository }}:${{ github.ref_name }}`
            - üê≥ **Latest tag**: `ghcr.io/${{ github.repository }}:latest`

            ### Usage:
            ```bash
            # Python package
            pip install elelem

            # Docker server
            docker run -p 8000:8000 ghcr.io/${{ github.repository }}:${{ github.ref_name }}
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Optional: Upload to PyPI (uncomment if you have a private PyPI)
      # - name: Publish to PyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     password: ${{ secrets.PYPI_API_TOKEN }}
      #     repository_url: https://your-private-pypi.com/