# Virtual models that reference multiple providers for resilience
# These models automatically failover between providers based on candidate configuration

models:
  # Virtual model for DeepSeek variants across providers
  "virtual:deepseek-v3.1-cheap":
    metadata:
      model_reference: "deepseek_v31"
    timeout: 120s
    candidates:
      - model: "deepinfra:deepseek/deepseek-3.1"
        timeout: 120s
      - model: "fireworks:deepseek/deepseek-3.1"
        timeout: 120s
      - model: "parasail:deepseek/deepseek-3.1"
        timeout: 120s

  "virtual:deepseek-v3.1-quick":
    metadata:
      model_reference: "deepseek_v31"
    timeout: 120s
    candidates:
      - model: "fireworks:deepseek/deepseek-3.1"
        timeout: 120s
      - model: "parasail:deepseek/deepseek-3.1"
        timeout: 120s
      - model: "deepinfra:deepseek/deepseek-3.1"
        timeout: 120s

  "virtual:deepseek-v3.1-cheap?reasoning":
    metadata:
      model_reference: "deepseek_v31"
    timeout: 120s
    candidates:
      - model: "deepinfra:deepseek/deepseek-3.1?reasoning=medium"
        timeout: 120s
      - model: "fireworks:deepseek/deepseek-3.1?reasoning=medium"
        timeout: 120s
      - model: "parasail:deepseek/deepseek-3.1?reasoning"
        timeout: 120s

  "virtual:deepseek-v3.1-quick?reasoning":
    metadata:
      model_reference: "deepseek_v31"
    timeout: 120s
    candidates:
      - model: "fireworks:deepseek/deepseek-3.1?reasoning=medium"
        timeout: 120s
      - model: "parasail:deepseek/deepseek-3.1?reasoning"
        timeout: 120s
      - model: "deepinfra:deepseek/deepseek-3.1?reasoning=medium"
        timeout: 120s


  # Cost-optimized routing (cheapest first)
  "virtual:gpt-oss-20b-cheap?reasoning=@[low,medium,high]":
    metadata:
      model_reference: "openai_gpt_oss_20b"
    timeout: 120s
    candidates:
      - model: "deepinfra:openai/gpt-oss-20b?reasoning=$reasoning"
        timeout: 120s
      - model: "fireworks:openai/gpt-oss-20b?reasoning=$reasoning"
        timeout: 120s
      - model: "groq:openai/gpt-oss-20b?reasoning=$reasoning"
        timeout: 120s

  # Speed-optimized routing (fastest first) - shorter timeouts for speed
  "virtual:gpt-oss-20b-quick?reasoning=@[low,medium,high]":
    metadata:
      model_reference: "openai_gpt_oss_20b"
    timeout: 120s
    candidates:
      - model: "groq:openai/gpt-oss-20b?reasoning=$reasoning"
        timeout: 120s
      - model: "fireworks:openai/gpt-oss-20b?reasoning=$reasoning"
        timeout: 120s
      - model: "deepinfra:openai/gpt-oss-20b?reasoning=$reasoning"
        timeout: 120s

  # Cost-optimized routing (cheapest first)
  "virtual:gpt-oss-120b-cheap?reasoning=@[low,medium,high]":
    metadata:
      model_reference: "openai_gpt_oss_120b"
    timeout: 120s
    candidates:
      - model: "deepinfra:openai/gpt-oss-120b?reasoning=$reasoning"
        timeout: 120s
      - model: "fireworks:openai/gpt-oss-120b?reasoning=$reasoning"
        timeout: 120s
      - model: "parasail:openai/gpt-oss-120b?reasoning=$reasoning"
        timeout: 120s

  # Speed-optimized routing (fastest first) - shorter timeouts for speed
  "virtual:gpt-oss-120b-quick?reasoning=@[low,medium,high]":
    metadata:
      model_reference: "openai_gpt_oss_120b"
    timeout: 120s
    candidates:
      - model: "groq:openai/gpt-oss-120b?reasoning=$reasoning"
        timeout: 120s   
      - model: "fireworks:openai/gpt-oss-120b?reasoning=$reasoning"    
        timeout: 120s
      - model: "cerebras@openrouter:openai/gpt-oss-120b?reasoning=$reasoning"     
        timeout: 120s        